{
	"name": "Roblox-TS Development",

	// Use the main Dockerfile
	"build": {
		"dockerfile": "./Dockerfile",
		"context": ".."
	},

	// Override the entrypoint to avoid conflicts with volume mounts
	"overrideCommand": true,

	"workspaceFolder": "/workspace",
	"shutdownAction": "stopContainer",

	// Set *default* container specific settings.json values on container create.
	"customizations": {
		"vscode": {
			"settings": {
				"terminal.integrated.defaultProfile.linux": "bash",
				"typescript.preferences.importModuleSpecifier": "relative",
				"jest.jestCommandLine": "npm run test:jest",
				"jest.runMode": "on-demand"
			},

			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"roblox-ts.vscode-roblox-ts",
				"dbaeumer.vscode-eslint",
				"esbenp.prettier-vscode",
				"Orta.vscode-jest",
				"checkraisefold.blink-vscode",
				"ms-python.python",
				"kampfkarren.selene-vscode",
				"johnnymorganz.stylua",
				"johnnymorganz.luau-lsp",
				"Gruntfuggly.todo-tree",
				"JohnnyMorganz.stylua",
				"foxundermoon.shell-format",
				"christian-kohler.npm-intellisense",
				"DavidAnson.vscode-markdownlint",
				"eamodio.gitlens"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [3000, 8080, 4000],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "npm install && npm run build",

	// Mount the source code
	"mounts": ["source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"],

	// Configure container user
	"remoteUser": "node",
	// Ensure proper container environment
	"containerEnv": {
		"NODE_ENV": "development"
	}
}
