name: CI/CD Pipeline

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    # Build Docker image once for all jobs
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Build Docker development environment
              run: docker compose build roblox-ts-dev

            - name: Fix file permissions
              run: |
                  # Fix any permission issues that might prevent cleanup
                  sudo chown -R runner:docker . || true
                  sudo chmod -R 755 . || true

            - name: Save Docker image
              run: |
                  # Alternative approach: use docker compose config to get service info
                  echo "=== Docker images before save ==="
                  docker images
                  echo "=== Docker compose images ==="
                  docker compose images

                  # Try multiple approaches to get the image
                  if IMAGE_NAME=$(docker compose images -q roblox-ts-dev 2>/dev/null) && [ -n "$IMAGE_NAME" ]; then
                      echo "Using compose image ID: $IMAGE_NAME"
                      docker save $IMAGE_NAME | gzip > docker-image.tar.gz
                  else
                      echo "Compose image query failed, trying alternative..."
                      # Get project name and try standard naming
                      PROJECT_NAME=$(basename $(pwd) | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]//g')
                      IMAGE_NAME="${PROJECT_NAME}-roblox-ts-dev"
                      echo "Trying image name: $IMAGE_NAME"
                      if docker image inspect $IMAGE_NAME >/dev/null 2>&1; then
                          docker save $IMAGE_NAME | gzip > docker-image.tar.gz
                      else
                          echo "Standard naming failed, listing all images..."
                          docker images --format "table {{.Repository}}:{{.Tag}}\t{{.Size}}\t{{.ID}}"
                          # Find any image with roblox-ts-dev in the name
                          FALLBACK_IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep roblox-ts-dev | head -1)
                          if [ -n "$FALLBACK_IMAGE" ]; then
                              echo "Using fallback image: $FALLBACK_IMAGE"
                              docker save $FALLBACK_IMAGE | gzip > docker-image.tar.gz
                          else
                              echo "ERROR: No roblox-ts-dev image found!"
                              exit 1
                          fi
                      fi
                  fi
                  ls -la docker-image.tar.gz

            - name: Upload Docker image artifact
              uses: actions/upload-artifact@v4
              with:
                  name: docker-image
                  path: docker-image.tar.gz
                  retention-days: 1

    # Linting job
    lint:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v4

            - name: Download Docker image artifact
              uses: actions/download-artifact@v4
              with:
                  name: docker-image

            - name: Load Docker image
              run: |
                  ls -la docker-image.tar.gz
                  gunzip docker-image.tar.gz
                  docker load < docker-image.tar

            - name: Fix file permissions for linting
              run: |
                  # Fix any permission issues that might prevent cleanup
                  sudo chown -R runner:docker . || true
                  sudo chmod -R 755 . || true

            - name: Install dependencies
              run: docker compose run --rm roblox-ts-dev npm ci

            - name: Run linting with auto-fix
              run: docker compose run --rm roblox-ts-dev npm run lint:fix

    # Coverage testing job
    coverage:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v4

            - name: Download Docker image artifact
              uses: actions/download-artifact@v4
              with:
                  name: docker-image

            - name: Load Docker image
              run: |
                  ls -la docker-image.tar.gz
                  gunzip docker-image.tar.gz
                  docker load < docker-image.tar

            - name: Install dependencies
              run: docker compose run --rm roblox-ts-dev npm ci

            - name: Fix coverage file permissions
              run: |
                  # Fix any permission issues that might prevent cleanup
                  sudo chown -R runner:docker . || true
                  sudo chmod -R 755 . || true
                  # Ensure coverage directory exists with proper permissions
                  mkdir -p coverage
                  sudo chown -R runner:docker coverage || true
                  sudo chmod -R 777 coverage || true

            - name: Run local tests with coverage
              run: |
                  # Run with proper permissions and volume mount
                  docker compose run --rm \
                    -v $(pwd)/coverage:/workspace/coverage \
                    --user "$(id -u):$(id -g)" \
                    roblox-ts-dev npm run test:coverage

            - name: Upload coverage reports to Codecov
              if: github.event_name == 'push'
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage/lcov.info
                  fail_ci_if_error: false

    # Cloud testing job - comprehensive testing in real Roblox environment
    cloud-tests:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v4

            - name: Download Docker image artifact
              uses: actions/download-artifact@v4
              with:
                  name: docker-image

            - name: Load Docker image
              run: |
                  ls -la docker-image.tar.gz
                  gunzip docker-image.tar.gz
                  docker load < docker-image.tar

            - name: Fix file permissions for cloud tests
              run: |
                  # Fix any permission issues that might prevent cleanup
                  sudo chown -R runner:docker . || true
                  sudo chmod -R 755 . || true

            - name: Install dependencies
              run: docker compose run --rm roblox-ts-dev npm ci

            - name: Run comprehensive cloud tests
              env:
                  ROBLOX_API_KEY: ${{ secrets.ROBLOX_API_KEY }}
                  ROBLOX_UNIVERSE_ID: ${{ secrets.ROBLOX_TEST_UNIVERSE_ID }}
                  ROBLOX_PLACE_ID: ${{ secrets.ROBLOX_TEST_PLACE_ID }}
              run: |
                  if [ -n "$ROBLOX_API_KEY" ]; then
                      echo "🔑 API key found - running comprehensive cloud tests"
                      echo "🧪 Testing against real Roblox environment for maximum accuracy"
                      echo "Debug: Environment configuration:"
                      echo "ROBLOX_API_KEY length: ${#ROBLOX_API_KEY}"
                      echo "ROBLOX_UNIVERSE_ID: '$ROBLOX_UNIVERSE_ID'"
                      echo "ROBLOX_PLACE_ID: '$ROBLOX_PLACE_ID'"
                      echo "---"
                      
                      # Run cloud tests using our new test:shell command for maximum accuracy
                      if docker compose run --rm \
                        -e ROBLOX_API_KEY="$ROBLOX_API_KEY" \
                        -e ROBLOX_UNIVERSE_ID="$ROBLOX_UNIVERSE_ID" \
                        -e ROBLOX_PLACE_ID="$ROBLOX_PLACE_ID" \
                        roblox-ts-dev npm run test:shell; then
                          echo "✅ All cloud tests passed!"
                          echo "🎉 Code is ready for real Roblox deployment"
                      else
                          echo "❌ Cloud tests failed!"
                          echo "🔍 Check test output above for details"
                          exit 1
                      fi
                  else
                      echo "⚠️  Roblox API secrets not configured - skipping cloud tests"
                      echo "💡 Configure ROBLOX_API_KEY, ROBLOX_TEST_UNIVERSE_ID, and ROBLOX_TEST_PLACE_ID secrets to enable cloud testing"
                      echo "🔧 For now, validating test structure and local Jest execution..."
                      
                      # Validate local test structure and Jest execution works
                      docker compose run --rm roblox-ts-dev npx jest --listTests
                      docker compose run --rm roblox-ts-dev npm run test:jest
                      
                      echo "💡 Local tests passed, but cloud validation is recommended before deployment"
                  fi
